// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7);

    RAM4K(in=in, load=reg0, address[0..10]=address[3..13], address[11]=false, out=out0);
    RAM4K(in=in, load=reg1, address[0..10]=address[3..13], address[11]=false, out=out1);
    RAM4K(in=in, load=reg2, address[0..10]=address[3..13], address[11]=false, out=out2);
    RAM4K(in=in, load=reg3, address[0..10]=address[3..13], address[11]=false, out=out3);
    RAM4K(in=in, load=reg4, address[0..10]=address[3..13], address[11]=false, out=out4);
    RAM4K(in=in, load=reg5, address[0..10]=address[3..13], address[11]=false, out=out5);
    RAM4K(in=in, load=reg6, address[0..10]=address[3..13], address[11]=false, out=out6);
    RAM4K(in=in, load=reg7, address[0..10]=address[3..13], address[11]=false, out=out7);

    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[0..2], out=out);
}
